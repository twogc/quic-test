# CloudBridge QUIC Experimental Extensions
# Makefile –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–∫–æ–º quic-go

.PHONY: help build-fork test-fork clean-fork

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
QUIC_FORK_DIR := ./quic-go-cloudbridge
QUIC_TEST_BINARY := quic-test-cloudbridge

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ CloudBridge —Ñ–æ—Ä–∫—É
	@echo "üöÄ CloudBridge QUIC Experimental Extensions"
	@echo "=========================================="
	@echo ""
	@echo "Experimental Features:"
	@echo "  - BBRv2 Congestion Control"
	@echo "  - ACK Frequency Extension"
	@echo "  - Interop-safe implementation"
	@echo ""
	@echo "Available commands:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  \033[36m%-25s\033[0m %s\n", $$1, $$2}'

build-fork: ## –°–æ–±—Ä–∞—Ç—å —Ñ–æ—Ä–∫ quic-go
	@echo "üîß Building CloudBridge QUIC fork..."
	cd $(QUIC_FORK_DIR) && go build ./...
	@echo "‚úÖ CloudBridge QUIC fork built successfully"

test-fork: build-fork ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ä–∫
	@echo "üß™ Testing CloudBridge QUIC fork..."
	cd $(QUIC_FORK_DIR) && go test ./...
	@echo "‚úÖ CloudBridge QUIC fork tests passed"

build-quictest: build-fork ## –°–æ–±—Ä–∞—Ç—å CLI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç quictest
	@echo "üîß Building quictest CLI..."
	cd $(QUIC_FORK_DIR) && go build -o ../build/quictest ./cmd/quictest
	@echo "‚úÖ quictest CLI built to build/quictest"

test-bbrv2: build-quictest ## –¢–µ—Å—Ç BBRv2 congestion control
	@echo "üìä Testing BBRv2 congestion control..."
	./build/quictest -cc=bbrv2 -mode=server &
	SERVER_PID=$$!; sleep 2; \
	./build/quictest -cc=bbrv2 -mode=client; \
	kill $$SERVER_PID
	@echo "‚úÖ BBRv2 test completed"

test-ack-frequency: build-quictest ## –¢–µ—Å—Ç ACK Frequency extension
	@echo "üìä Testing ACK Frequency extension..."
	./build/quictest -ackfreq=true -ackth=10 -ackmad=15 -mode=server &
	SERVER_PID=$$!; sleep 2; \
	./build/quictest -ackfreq=true -ackth=10 -ackmad=15 -mode=client; \
	kill $$SERVER_PID
	@echo "‚úÖ ACK Frequency test completed"

test-experimental: build-quictest ## –¢–µ—Å—Ç –≤—Å–µ—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
	@echo "üöÄ Testing all experimental features..."
	./build/quictest -cc=bbrv2 -ackfreq=true -ackth=5 -ackmad=10 -mode=server &
	SERVER_PID=$$!; sleep 2; \
	./build/quictest -cc=bbrv2 -ackfreq=true -ackth=5 -ackmad=10 -mode=client; \
	kill $$SERVER_PID
	@echo "‚úÖ All experimental features test completed"

# –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º
integrate-with-main: ## –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ä–∫ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º
	@echo "üîó Integrating CloudBridge fork with main project..."
	@echo "1. Updating go.mod replace directive..."
	@echo "2. Building main project with experimental features..."
	go build ./...
	@echo "‚úÖ Integration completed"

test-main-with-fork: integrate-with-main ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç —Å —Ñ–æ—Ä–∫–æ–º
	@echo "üß™ Testing main project with CloudBridge fork..."
	./quic-test-error-test -scenario=experimental-features -duration=30s -verbose
	@echo "‚úÖ Main project test with fork completed"

# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
docs-fork: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é —Ñ–æ—Ä–∫–∞
	@echo "üìö Generating CloudBridge fork documentation..."
	@echo ""
	@echo "CloudBridge QUIC Experimental Extensions:"
	@echo "========================================"
	@echo ""
	@echo "1. BBRv2 Congestion Control:"
	@echo "   - Startup/Drain/ProbeBW/ProbeRTT states"
	@echo "   - Delivery rate measurement"
	@echo "   - Min RTT filtering"
	@echo "   - Pacing and cwnd gain cycling"
	@echo ""
	@echo "2. ACK Frequency Extension:"
	@echo "   - ACK_FREQUENCY frame (0xaf)"
	@echo "   - IMMEDIATE_ACK frame (0x1f)"
	@echo "   - min_ack_delay transport parameter"
	@echo "   - Adaptive ACK policy"
	@echo ""
	@echo "3. Interop Safety:"
	@echo "   - RFC 9000/9002 fallback"
	@echo "   - Provisional codepoints"
	@echo "   - Backward compatibility"
	@echo ""
	@echo "4. Usage Examples:"
	@echo "   - CLI: ./quictest -cc=bbrv2 -ackfreq=true"
	@echo "   - Programmatic: quic.Config with CloudBridge fields"
	@echo "   - Testing: ./quic-test-error-test -cc=bbrv2"

# –û—á–∏—Å—Ç–∫–∞
clean-fork: ## –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∞–π–ª—ã —Ñ–æ—Ä–∫–∞
	@echo "üßπ Cleaning CloudBridge fork files..."
	rm -rf build/
	cd $(QUIC_FORK_DIR) && go clean
	@echo "‚úÖ CloudBridge fork files cleaned"

# –í—Å–µ –∫–æ–º–∞–Ω–¥—ã
all-fork: clean-fork build-fork test-fork build-quictest test-experimental ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ñ–æ—Ä–∫–æ–º
	@echo "üéâ All CloudBridge fork operations completed!"
	@echo "Check build/ directory for binaries"
