#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ 2GC Network Protocol Suite –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
RED='\033[0;31m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —ç–∫—Ä–∞–Ω–∞
clear_screen() {
    clear
    echo -e "${BLUE}==========================================${NC}"
    echo -e "${BLUE}  2GC Network Protocol Suite - Live Monitor${NC}"
    echo -e "${BLUE}==========================================${NC}"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
show_server_status() {
    echo -e "${YELLOW}üñ•Ô∏è  QUIC –°–µ—Ä–≤–µ—Ä:${NC}"
    if docker ps | grep -q "2gc-network-server"; then
        echo -e "${GREEN}  ‚úÖ –ó–∞–ø—É—â–µ–Ω${NC}"
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞
        echo -e "${CYAN}  üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –º–µ—Ç—Ä–∏–∫–∏:${NC}"
        docker logs --tail 3 2gc-network-server 2>/dev/null | grep -E "(Connections|Streams|Bytes|Errors|Uptime)" | tail -1
    else
        echo -e "${RED}  ‚ùå –ù–µ –∑–∞–ø—É—â–µ–Ω${NC}"
    fi
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–µ—Ç—Ä–∏–∫ Prometheus
show_prometheus_metrics() {
    echo -e "${YELLOW}üìä Prometheus –º–µ—Ç—Ä–∏–∫–∏:${NC}"
    if curl -s http://localhost:2113/metrics >/dev/null 2>&1; then
        echo -e "${GREEN}  ‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã${NC}"
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        echo -e "${CYAN}  üìà –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏:${NC}"
        curl -s http://localhost:2113/metrics 2>/dev/null | grep -E "(quic_server_|quic_client_)" | head -5 | while read line; do
            echo "    $line"
        done
    else
        echo -e "${RED}  ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã${NC}"
    fi
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ç—á–µ—Ç–æ–≤
show_recent_reports() {
    echo -e "${YELLOW}üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç—á–µ—Ç—ã:${NC}"
    local reports=$(ls -t *.md *.json 2>/dev/null | grep -E "(report|test)" | head -3)
    if [ -n "$reports" ]; then
        for report in $reports; do
            local size=$(ls -lh "$report" 2>/dev/null | awk '{print $5}')
            local time=$(ls -l "$report" 2>/dev/null | awk '{print $6, $7, $8}')
            echo -e "${CYAN}  üìÑ $report ($size, $time)${NC}"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è JSON –æ—Ç—á–µ—Ç–æ–≤
            if [[ "$report" == *.json ]]; then
                if command -v jq &> /dev/null; then
                    local success=$(jq -r '.metrics.Success' "$report" 2>/dev/null)
                    local errors=$(jq -r '.metrics.Errors' "$report" 2>/dev/null)
                    local bytes=$(jq -r '.metrics.BytesSent' "$report" 2>/dev/null)
                    echo "    ‚úÖ –£—Å–ø–µ—à–Ω–æ: $success, ‚ùå –û—à–∏–±–∫–∏: $errors, üì¶ –ë–∞–π—Ç: $bytes"
                fi
            fi
        done
    else
        echo -e "${RED}  ‚ùå –û—Ç—á–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
    fi
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–µ—Ç–µ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
show_network_stats() {
    echo -e "${YELLOW}üåê –°–µ—Ç–µ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:${NC}"
    echo -e "${CYAN}  üì° UDP –ø–æ—Ä—Ç 9000:${NC}"
    if sudo ss -ulpn | grep -q ":9000"; then
        echo -e "${GREEN}    ‚úÖ –°–ª—É—à–∞–µ—Ç${NC}"
    else
        echo -e "${RED}    ‚ùå –ù–µ —Å–ª—É—à–∞–µ—Ç${NC}"
    fi
    
    echo -e "${CYAN}  üî• UFW —Å—Ç–∞—Ç—É—Å:${NC}"
    if sudo ufw status | grep -q "9000/udp"; then
        echo -e "${GREEN}    ‚úÖ –ü–æ—Ä—Ç 9000/udp –æ—Ç–∫—Ä—ã—Ç${NC}"
    else
        echo -e "${RED}    ‚ùå –ü–æ—Ä—Ç 9000/udp –∑–∞–∫—Ä—ã—Ç${NC}"
    fi
    
    echo -e "${CYAN}  üåç –í–Ω–µ—à–Ω–∏–π IP:${NC}"
    local external_ip=$(curl -s ifconfig.me 2>/dev/null || echo "–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    echo "    $external_ip:9000"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
show_resource_usage() {
    echo -e "${YELLOW}üíª –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"
    echo -e "${CYAN}  üê≥ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:${NC}"
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep -E "(2gc|quic)" | while read line; do
        echo "    $line"
    done
    
    echo -e "${CYAN}  üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:${NC}"
    free -h | grep -E "(Mem|Swap)" | while read line; do
        echo "    $line"
    done
    
    echo -e "${CYAN}  üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:${NC}"
    df -h / | tail -1 | awk '{print "    –î–∏—Å–∫: " $3 "/" $2 " (" $5 ")"}'
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
main() {
    local refresh_interval=${1:-5}  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5)
    
    echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ ${refresh_interval}—Å)${NC}"
    echo -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞${NC}"
    echo ""
    
    while true; do
        clear_screen
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è
        echo -e "${CYAN}üïê –í—Ä–µ–º—è: $(date)${NC}"
        echo ""
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏
        show_server_status
        show_prometheus_metrics
        show_recent_reports
        show_network_stats
        show_resource_usage
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        echo -e "${BLUE}üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
        echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞: docker logs -f 2gc-network-server"
        echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: docker stop 2gc-network-server"
        echo "  –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞: ./scripts/docker-client.sh"
        echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–æ–≤: ./scripts/view-reports.sh"
        echo ""
        
        # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
        sleep "$refresh_interval"
    done
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    -h|--help)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∏–Ω—Ç–µ—Ä–≤–∞–ª_–≤_—Å–µ–∫—É–Ω–¥–∞—Ö]"
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  $0        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥"
        echo "  $0 2      # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã"
        echo "  $0 10     # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥"
        exit 0
        ;;
    *)
        main "$@"
        ;;
esac

