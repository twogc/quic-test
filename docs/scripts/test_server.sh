#!/bin/bash
# QUIC Server Test Script
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ QUIC —Å–µ—Ä–≤–µ—Ä–∞ —Å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏

echo "üß™ QUIC Server Test Suite"
echo "========================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
echo "1Ô∏è‚É£  Server Process Check:"
if pgrep -f "quic-test-experimental.*server" > /dev/null; then
    PID=$(pgrep -f "quic-test-experimental.*server")
    echo "   ‚úÖ Server process found (PID: $PID)"
    echo "   ‚úÖ Status: $(ps -o stat= -p $PID 2>/dev/null | tr -d ' ')"
    echo "   ‚úÖ Uptime: $(ps -o etime= -p $PID 2>/dev/null | tr -d ' ')"
else
    echo "   ‚ùå Server process not found"
    echo "   üí° Start server with: ./quic-test-experimental -mode server -addr 0.0.0.0:9000 ..."
    exit 1
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞
echo "2Ô∏è‚É£  Server Logs Check:"
if [ -f "server.log" ]; then
    echo "   ‚úÖ Log file exists: server.log"
    echo "   ‚úÖ File size: $(du -h server.log | cut -f1)"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
    LAST_LOG=$(tail -1 server.log 2>/dev/null)
    if [ -n "$LAST_LOG" ]; then
        echo "   ‚úÖ Last log entry: $LAST_LOG"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—à–∏–±–∫–∏
    ERROR_COUNT=$(grep -c "ERROR" server.log 2>/dev/null || echo "0")
    if [ "$ERROR_COUNT" -gt 0 ]; then
        echo "   ‚ö†Ô∏è  Found $ERROR_COUNT ERROR messages in logs"
        echo "   üìã Recent errors:"
        grep "ERROR" server.log | tail -3 | sed 's/^/      /'
    else
        echo "   ‚úÖ No ERROR messages found"
    fi
else
    echo "   ‚ùå Log file not found"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: Qlog —Ñ–∞–π–ª—ã
echo "3Ô∏è‚É£  Qlog Files Check:"
if [ -d "server-qlog" ]; then
    QLOG_COUNT=$(find server-qlog -name "*.qlog" 2>/dev/null | wc -l)
    echo "   ‚úÖ Qlog directory exists: server-qlog"
    echo "   ‚úÖ Qlog files count: $QLOG_COUNT"
    
    if [ $QLOG_COUNT -gt 0 ]; then
        LATEST_QLOG=$(ls -t server-qlog/*.qlog 2>/dev/null | head -1)
        if [ -n "$LATEST_QLOG" ]; then
            echo "   ‚úÖ Latest qlog: $(basename "$LATEST_QLOG")"
            echo "   ‚úÖ Latest qlog size: $(du -h "$LATEST_QLOG" | cut -f1)"
        fi
    else
        echo "   ‚ÑπÔ∏è  No qlog files yet (waiting for client connections)"
    fi
else
    echo "   ‚ùå Qlog directory not found"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –°–µ—Ç–µ–≤—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
echo "4Ô∏è‚É£  Network Connectivity Check:"
echo "   Testing UDP port 9000..."

# –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ UDP –ø–æ—Ä—Ç–∞
if timeout 2 bash -c "</dev/udp/127.0.0.1/9000" 2>/dev/null; then
    echo "   ‚úÖ UDP port 9000 is accessible"
else
    echo "   ‚ö†Ô∏è  UDP port 9000 test inconclusive (UDP is connectionless)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–ª—É—à–∞–µ—Ç –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –ø–æ—Ä—Ç
if ss -u 2>/dev/null | grep -q ":9000"; then
    echo "   ‚úÖ Port 9000 is bound to UDP"
else
    echo "   ‚ÑπÔ∏è  Port binding not visible (normal for UDP)"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
echo "5Ô∏è‚É£  System Resources Check:"
if pgrep -f "quic-test-experimental.*server" > /dev/null; then
    PID=$(pgrep -f "quic-test-experimental.*server")
    CPU_USAGE=$(ps -o %cpu= -p $PID 2>/dev/null | tr -d ' ')
    MEM_USAGE=$(ps -o %mem= -p $PID 2>/dev/null | tr -d ' ')
    RSS_MEM=$(ps -o rss= -p $PID 2>/dev/null | tr -d ' ')
    
    echo "   ‚úÖ CPU Usage: ${CPU_USAGE}%"
    echo "   ‚úÖ Memory Usage: ${MEM_USAGE}%"
    echo "   ‚úÖ RSS Memory: ${RSS_MEM} KB"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–ª–∏—à–∫–æ–º –ª–∏ –≤—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
    if (( $(echo "$CPU_USAGE > 50" | bc -l) )); then
        echo "   ‚ö†Ô∏è  High CPU usage detected"
    fi
    
    if (( $(echo "$MEM_USAGE > 10" | bc -l) )); then
        echo "   ‚ö†Ô∏è  High memory usage detected"
    fi
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 6: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
echo "6Ô∏è‚É£  Server Configuration Check:"
if [ -f "server.log" ]; then
    echo "   üìã Server configuration from logs:"
    grep -E "(Experimental Features|Congestion Control|FEC|ACK Frequency)" server.log | head -5 | sed 's/^/      /'
fi

echo ""

# –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
echo "üìä Test Summary:"
if pgrep -f "quic-test-experimental.*server" > /dev/null && [ -f "server.log" ]; then
    echo "   ‚úÖ Server is RUNNING and LOGGING"
    echo "   ‚úÖ Ready for client connections"
    echo ""
    echo "üîó Server Information:"
    echo "   Address: 0.0.0.0:9000"
    echo "   Protocol: QUIC over UDP"
    echo "   Features: BBRv2, FEC, ACK Frequency, Greasing"
    echo ""
    echo "üìù Monitoring Commands:"
    echo "   Status: ./monitor_server.sh"
    echo "   Logs: ./monitor_logs.sh"
    echo "   Real-time: tail -f server.log"
else
    echo "   ‚ùå Server issues detected"
    echo "   üí° Check server status and logs"
fi

echo ""
echo "üß™ Test completed at $(date)"
