# 2GC Network Protocol Suite - Monitoring Stack
# Prometheus + Grafana для мониторинга QUIC тестирования

version: '3.8'

services:
  # Prometheus для сбора метрик
  prometheus:
    image: prom/prometheus:latest
    container_name: 2gc-network-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Grafana для визуализации
  grafana:
    image: grafana/grafana:latest
    container_name: 2gc-network-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

  # Jaeger для трейсинга (опционально)
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: 2gc-network-jaeger
    ports:
      - "16686:16686"   # Jaeger UI
      - "14268:14268"   # Jaeger collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - monitoring
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge
    name: 2gc-monitoring

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
