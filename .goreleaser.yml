# 2GC CloudBridge QUIC testing - GoReleaser –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ —Ä–µ–ª–∏–∑–æ–≤ –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º

project_name: quic-test
before:
  hooks:
    - go mod tidy
    - go mod verify

builds:
  # –û—Å–Ω–æ–≤–Ω–æ–π –±–∏–Ω–∞—Ä–Ω–∏–∫
  - id: quic-test
    binary: quic-test
    main: .
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    tags:
      - netgo
      - osusergo

  # Dashboard
  - id: dashboard
    binary: dashboard
    main: ./cmd/dashboard
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    tags:
      - netgo
      - osusergo

  # QUIC Client
  - id: quic-client
    binary: quic-client
    main: ./cmd/quic-client
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    tags:
      - netgo
      - osusergo

  # QUIC Server
  - id: quic-server
    binary: quic-server
    main: ./cmd/quic-server
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    tags:
      - netgo
      - osusergo

  # TUI Dashboard
  - id: tui
    binary: tui
    main: ./cmd/tui
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    tags:
      - netgo
      - osusergo

archives:
  - id: quic-test
    name_template: "quic-test_{{.Os}}_{{.Arch}}_v{{.Version}}"
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - "*.md"
    builds:
      - quic-test

  - id: dashboard
    name_template: "dashboard_{{.Os}}_{{.Arch}}_v{{.Version}}"
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - "*.md"
    builds:
      - dashboard

  - id: quic-client
    name_template: "quic-client_{{.Os}}_{{.Arch}}_v{{.Version}}"
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - "*.md"
    builds:
      - quic-client

  - id: quic-server
    name_template: "quic-server_{{.Os}}_{{.Arch}}_v{{.Version}}"
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - "*.md"
    builds:
      - quic-server

  - id: tui
    name_template: "tui_{{.Os}}_{{.Arch}}_v{{.Version}}"
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - "*.md"
    builds:
      - tui

  # –ü–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç —Å–æ –≤—Å–µ–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
  - id: full
    name_template: "quic-test-full_{{.Os}}_{{.Arch}}_v{{.Version}}"
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - "*.md"
      - Makefile
      - docker-compose.yml
      - Dockerfile*
    builds:
      - quic-test
      - dashboard
      - quic-client
      - quic-server
      - tui

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'

release:
  github:
    owner: cloudbridge-relay-installer
    name: quck-test
  draft: false
  prerelease: auto
  name_template: "v{{.Version}}"
  header: |
    ## üöÄ 2GC CloudBridge QUIC testing v{{.Version}}
    
    ### üì¶ –ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ:
    - **quic-test**: –û—Å–Ω–æ–≤–Ω–æ–π –±–∏–Ω–∞—Ä–Ω–∏–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    - **dashboard**: –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    - **tui**: TUI –¥–∞—à–±–æ—Ä–¥ –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
    - **quic-client**: QUIC –∫–ª–∏–µ–Ω—Ç
    - **quic-server**: QUIC —Å–µ—Ä–≤–µ—Ä
    
    ### üéØ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:
    - Linux (amd64, arm64)
    - macOS (amd64, arm64)
    - Windows (amd64, arm64)
    
    ### üìã –ß–µ–∫-–ª–∏—Å—Ç —Ä–µ–ª–∏–∑–∞:
    - [ ] –í—Å–µ –±–∏–Ω–∞—Ä–Ω–∏–∫–∏ —Å–æ–±—Ä–∞–Ω—ã –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
    - [ ] –¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ
    - [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞
    - [ ] Docker –æ–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã
    - [ ] –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ (gosec)
    - [ ] –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞
    - [ ] –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å Go {{.GoVersion}} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞

  footer: |
    ## üìñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
    
    ### –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:
    ```bash
    # –°–∫–∞—á–∞—Ç—å –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å
    tar -xzf quic-test-full_linux_amd64_v{{.Version}}.tar.gz
    cd quic-test-full_linux_amd64_v{{.Version}}
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    ./quic-server --addr=:9000 --prometheus
    
    # –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞
    ./quic-client --addr=127.0.0.1:9000 --connections=2 --streams=4
    
    # –ó–∞–ø—É—Å–∫ –¥–∞—à–±–æ—Ä–¥–∞
    ./dashboard --addr=:9990
    
    # –ó–∞–ø—É—Å–∫ TUI –¥–∞—à–±–æ—Ä–¥–∞
    ./tui --demo --fps 10
    ```
    
    ### Docker:
    ```bash
    docker-compose up --build
    ```
    
    ## üîß –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è
    - Go 1.21+ (–¥–ª—è —Å–±–æ—Ä–∫–∏ –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤)
    - Docker (–¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è)
    - 2GB RAM (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
    
    ## üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    - Prometheus –º–µ—Ç—Ä–∏–∫–∏: `:2112/metrics` (–∫–ª–∏–µ–Ω—Ç), `:2113/metrics` (—Å–µ—Ä–≤–µ—Ä)
    - –í–µ–±-–¥–∞—à–±–æ—Ä–¥: `:9990`
    - pprof –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: `:6060/debug/pprof`

dockers:
  - image_templates:
      - "quic-test:{{ .Version }}"
      - "quic-test:latest"
    dockerfile: Dockerfile
    build_flag_templates:
      - "--label=org.opencontainers.image.title=2GC CloudBridge QUIC testing"
      - "--label=org.opencontainers.image.description=QUIC performance testing tool"
      - "--label=org.opencontainers.image.url=https://github.com/cloudbridge-relay-installer/quck-test"
      - "--label=org.opencontainers.image.source=https://github.com/cloudbridge-relay-installer/quck-test"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"

  - image_templates:
      - "quic-test-dashboard:{{ .Version }}"
      - "quic-test-dashboard:latest"
    dockerfile: Dockerfile.dashboard
    build_flag_templates:
      - "--label=org.opencontainers.image.title=2GC CloudBridge Dashboard"
      - "--label=org.opencontainers.image.description=QUIC testing dashboard"
      - "--label=org.opencontainers.image.url=https://github.com/cloudbridge-relay-installer/quck-test"
      - "--label=org.opencontainers.image.source=https://github.com/cloudbridge-relay-installer/quck-test"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"

announce:
  skip: false
  twitter:
    enabled: false
  mastodon:
    enabled: false
  reddit:
    enabled: false
  linkedin:
    enabled: false
  slack:
    enabled: false
  discord:
    enabled: false
  teams:
    enabled: false
  telegram:
    enabled: false
  smtp:
    enabled: false
